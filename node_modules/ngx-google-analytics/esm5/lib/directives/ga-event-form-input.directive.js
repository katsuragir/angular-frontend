/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Host, Optional, Input } from '@angular/core';
import { GaEventDirective } from './ga-event.directive';
var GaEventFormInputDirective = /** @class */ (function () {
    function GaEventFormInputDirective($gaEvent) {
        this.$gaEvent = $gaEvent;
    }
    /**
     * @return {?}
     */
    GaEventFormInputDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.$gaEvent) {
            this.$gaEvent.gaBind = (this.gaBind)
                ? this.$gaEvent.gaBind
                : 'focus';
        }
    };
    GaEventFormInputDirective.decorators = [
        { type: Directive, args: [{
                    selector: "input[gaEvent],\n             select[gaEvent],\n             textarea[gaEvent]"
                },] }
    ];
    /** @nocollapse */
    GaEventFormInputDirective.ctorParameters = function () { return [
        { type: GaEventDirective, decorators: [{ type: Host }, { type: Optional }] }
    ]; };
    GaEventFormInputDirective.propDecorators = {
        gaBind: [{ type: Input }]
    };
    return GaEventFormInputDirective;
}());
export { GaEventFormInputDirective };
if (false) {
    /** @type {?} */
    GaEventFormInputDirective.prototype.gaBind;
    /**
     * @type {?}
     * @protected
     */
    GaEventFormInputDirective.prototype.$gaEvent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2EtZXZlbnQtZm9ybS1pbnB1dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZ29vZ2xlLWFuYWx5dGljcy8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2dhLWV2ZW50LWZvcm0taW5wdXQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3hEO0lBT0UsbUNBQ2dDLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0lBQ3RELENBQUM7Ozs7SUFJTCw0Q0FBUTs7O0lBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO2dCQUNaLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU07Z0JBQ3RCLENBQUMsQ0FBQyxPQUFPLENBQUM7U0FDbkM7SUFDSCxDQUFDOztnQkFuQkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnRkFFbUI7aUJBQzlCOzs7O2dCQVBRLGdCQUFnQix1QkFXcEIsSUFBSSxZQUFJLFFBQVE7Ozt5QkFHbEIsS0FBSzs7SUFVUixnQ0FBQztDQUFBLEFBckJELElBcUJDO1NBaEJZLHlCQUF5Qjs7O0lBTXBDLDJDQUF3Qjs7Ozs7SUFIdEIsNkNBQXdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0LCBPcHRpb25hbCwgT25Jbml0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgR2FFdmVudERpcmVjdGl2ZSB9IGZyb20gJy4vZ2EtZXZlbnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IEdhQmluZCB9IGZyb20gJy4uL3R5cGVzL2dhLWJpbmQudHlwZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogYGlucHV0W2dhRXZlbnRdLFxuICAgICAgICAgICAgIHNlbGVjdFtnYUV2ZW50XSxcbiAgICAgICAgICAgICB0ZXh0YXJlYVtnYUV2ZW50XWBcbn0pXG5leHBvcnQgY2xhc3MgR2FFdmVudEZvcm1JbnB1dERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEhvc3QoKSBAT3B0aW9uYWwoKSBwcm90ZWN0ZWQgJGdhRXZlbnQ6IEdhRXZlbnREaXJlY3RpdmVcbiAgKSB7IH1cblxuICBASW5wdXQoKSBnYUJpbmQ6IEdhQmluZDtcblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy4kZ2FFdmVudCkge1xuICAgICAgdGhpcy4kZ2FFdmVudC5nYUJpbmQgPSAodGhpcy5nYUJpbmQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHRoaXMuJGdhRXZlbnQuZ2FCaW5kXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICdmb2N1cyc7XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==