import { IGoogleAnalyticsSettings } from '../interfaces/i-google-analytics-settings';
import { GaAction } from '../types/ga-action.type';
export declare class GoogleAnalyticsService {
    protected $trackingId: IGoogleAnalyticsSettings;
    constructor($trackingId: IGoogleAnalyticsSettings);
    protected throw(err: Error): void;
    /**
     * Call native GA Tag
     *
     * @param action config|event
     * @param command Action specialization
     * @param options Command configuration
     */
    gtag(action: string, command: string, ...options: Array<any>): void;
    /**
     * Send an event trigger to GA. It is the same as call:
     * ```js
     * gtag('event', 'video_auto_play_start', {
     *   'event_label': 'My promotional video',
     *   'event_category': 'video_auto_play'
     * });
     * ```
     *
     * @param action 'video_auto_play_start'
     * @param category 'video_auto_play'
     * @param label 'My promotional video'
     * @param value An value to measure something
     */
    event(action: GaAction | string, category?: string, label?: string, value?: number, interaction?: boolean): void;
    /**
     * Send an page view event. This is the same as
     *
     * ```js
     * gtag('config', 'GA_TRACKING_ID', {
     *   'page_title' : 'Homepage',
     *   'page_path': '/home'
     * });
     * ```
     *
     * The tracking ID is injected automatically by Inject Token NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN
     *
     * @param path /home
     * @param title Homepage
     * @param location '{ page_location }'
     * @param options '{ ... custom dimentions }'
     */
    pageView(path?: string, title?: string, location?: string, options?: Object): void;
    /**
     * Send an evento to report a App Page View. It is the same as
     *
     * ```js
     * gtag('event', 'screen_view', {
     *   'app_name': 'myAppName',
     *   'screen_name' : 'Home'
     * });
     *
     * ```
     *
     * @param screen 'screen_name'
     * @param name 'app_name'
     * @param appId 'app_id'
     * @param appVersion 'app_version'
     * @param installerId 'app_installer_id'
     */
    appView(screen: string, appName: string, appId?: string, appVersion?: string, installerId?: string): void;
    /**
     * Send an event to GA to report an application error. It is the same as
     *
     * ```js
     * gtag('event', 'exception', {
     *   'description': 'error_description',
     *   'fatal': false   // set to true if the error is fatal
     * });
     * ```
     *
     * @param description 'error_description'
     * @param fatal set to true if the error is fatal
     */
    exception(description?: string, fatal?: boolean): void;
}
