/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Host, Optional, Input } from '@angular/core';
import { GaEventDirective } from './ga-event.directive';
export class GaEventFormInputDirective {
    /**
     * @param {?} $gaEvent
     */
    constructor($gaEvent) {
        this.$gaEvent = $gaEvent;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.$gaEvent) {
            this.$gaEvent.gaBind = (this.gaBind)
                ? this.$gaEvent.gaBind
                : 'focus';
        }
    }
}
GaEventFormInputDirective.decorators = [
    { type: Directive, args: [{
                selector: `input[gaEvent],
             select[gaEvent],
             textarea[gaEvent]`
            },] }
];
/** @nocollapse */
GaEventFormInputDirective.ctorParameters = () => [
    { type: GaEventDirective, decorators: [{ type: Host }, { type: Optional }] }
];
GaEventFormInputDirective.propDecorators = {
    gaBind: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    GaEventFormInputDirective.prototype.gaBind;
    /**
     * @type {?}
     * @protected
     */
    GaEventFormInputDirective.prototype.$gaEvent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2EtZXZlbnQtZm9ybS1pbnB1dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtZ29vZ2xlLWFuYWx5dGljcy8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL2dhLWV2ZW50LWZvcm0taW5wdXQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBUXhELE1BQU0sT0FBTyx5QkFBeUI7Ozs7SUFFcEMsWUFDZ0MsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7SUFDdEQsQ0FBQzs7OztJQUlMLFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO2dCQUNaLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU07Z0JBQ3RCLENBQUMsQ0FBQyxPQUFPLENBQUM7U0FDbkM7SUFDSCxDQUFDOzs7WUFuQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRTs7K0JBRW1CO2FBQzlCOzs7O1lBUFEsZ0JBQWdCLHVCQVdwQixJQUFJLFlBQUksUUFBUTs7O3FCQUdsQixLQUFLOzs7O0lBQU4sMkNBQXdCOzs7OztJQUh0Qiw2Q0FBd0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3QsIE9wdGlvbmFsLCBPbkluaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHYUV2ZW50RGlyZWN0aXZlIH0gZnJvbSAnLi9nYS1ldmVudC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgR2FCaW5kIH0gZnJvbSAnLi4vdHlwZXMvZ2EtYmluZC50eXBlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiBgaW5wdXRbZ2FFdmVudF0sXG4gICAgICAgICAgICAgc2VsZWN0W2dhRXZlbnRdLFxuICAgICAgICAgICAgIHRleHRhcmVhW2dhRXZlbnRdYFxufSlcbmV4cG9ydCBjbGFzcyBHYUV2ZW50Rm9ybUlucHV0RGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASG9zdCgpIEBPcHRpb25hbCgpIHByb3RlY3RlZCAkZ2FFdmVudDogR2FFdmVudERpcmVjdGl2ZVxuICApIHsgfVxuXG4gIEBJbnB1dCgpIGdhQmluZDogR2FCaW5kO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLiRnYUV2ZW50KSB7XG4gICAgICB0aGlzLiRnYUV2ZW50LmdhQmluZCA9ICh0aGlzLmdhQmluZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdGhpcy4kZ2FFdmVudC5nYUJpbmRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogJ2ZvY3VzJztcbiAgICB9XG4gIH1cblxufVxuIl19